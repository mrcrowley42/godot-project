--CODE NOTES--

--SAVING--
Save data saves in binary-encrypted sudo-json format. To deter users going in and changing things. Nodes that need to be saved are added to a group 'save_data' and require a unique save() and load() function.
Settings use Godot's in-built ConfigFile class to nicely format and handle the settings.

For future: Will need to add sanity checks to save & settings file as anything new thing being saved or loaded will crash the game.


--STATUS MANAGER--
Adds various timers as children of itself to handle the different rates of the draining stats.


--MINIGAME MANAGER--
Loads and un-loads minigames. Only allowes only one minigame to run at a time.

For future: should save the states of minigames and load the saved states when re-opened.


--CREATURE--
Creature is a separate scene (a scene in Godot acts like an Object, and scene instances can be spawned from the base scene)
Whenever a stat is changed, the creature emits a signal (aka an event) that any other node in the scene can listen for. SEE GODOT FEATURES BELOW

Show Creature docs that are auto-generated by Godot.

Creature's low stats sounds are played after a given cool-down, and are picked at random from a pool of queued sounds.


--GODOT FEATURES--
Something about signals
